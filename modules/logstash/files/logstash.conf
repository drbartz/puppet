input {
    lumberjack {
        port => 5043
        #type => "logs"
        ssl_certificate => "/etc/logstash/logstash-forwarder.crt"
        ssl_key => "/etc/logstash/logstash-forwarder.key"
    }
    syslog {
        host    => "0.0.0.0"
    }
}

filter {
  if [type] == "apache" {
    grok {
      pattern => "%{COMBINEDAPACHELOG}"
    }
  }

  if [type] == "squid" {
    grok {
        pattern => "%{NUMBER:timestamp} \s+ %{NUMBER:request_msec:float} %{IPORHOST:src_ip} %{WORD:cache_result}/%{NUMBER:response_status:int} %{NUMBER:response_size:int} %{WORD:http_method} (%{URIPROTO:http_proto}://)?%{IPORHOST:dst_host}(?::%{POSINT:port})?(?:%{URIPATHPARAM:uri_param})? %{USERNAME:cache_user} %{WORD:request_route}/(%{IPORHOST:forwarded_to}|-) %{GREEDYDATA:content_type}"
        add_tag => "squid"
    }
    date {
        tags => "squid"
        match => [ "timestamp", "UNIX" ]
    }
  }

  if [severity] == 5 {
    if [priority] == 29 {
      grok {
        match => [ "message" , "Finished catalog run in %{NUMBER:duration:float} seconds" ]
        match => [ "message" , "Compiled catalog for %{HOSTNAME} in environment production in %{NUMBER:duration:float} seconds" ]
      }
    }
  }
  if [severity] == 7 {
    if [priority] == 31 {
      grok {
        match => [ "message" , "Stored state in %{NUMBER:duration:float} seconds" ]
        match => [ "message" , "Loaded state in %{NUMBER:duration:float} seconds" ]
      }
    }
  }

#  if [type] == "iptables" {
#    grok {
#      patterns_dir => "/usr/share/grok/patterns/iptables"
#      pattern => "%{IPTABLES}"
#    }
#  }
}

output {
    elasticsearch { 
        host => localhost 
        cluster => 'elasticsearch'
    }
#    stdout { codec => rubydebug }
}
